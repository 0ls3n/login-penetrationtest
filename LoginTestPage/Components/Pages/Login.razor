@using LoginTestPage.Models
@using LoginTestPage.Services
@inject IUserManager UserManager
@inject NavigationManager Navigation
@page "/Login"


<div style="background: #ffffff;" class="p-5 w-50 mx-auto rounded-4">
    <h3 class="text-center mb-5" style="font-size:42px;">Sign in</h3>

    <div>
        <EditForm Model="User" OnValidSubmit="OnSubmit" FormName="Sign in">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <!-- Email input -->
            <div data-mdb-input-init class="form-outline mb-4">
                <InputText @bind-Value="User!.Email" type="email" id="form2Example1" class="form-control"/>
                <label class="form-label" for="form2Example1">Email address</label>
            </div>

            <!-- Password input -->
            <div data-mdb-input-init class="form-outline mb-4">
                <InputText @bind-Value="User.Password" type="password" id="form2Example2" class="form-control"/>
                <label class="form-label" for="form2Example2">Password</label>
            </div>

            <!-- Submit button -->
            <button type="submit" data-mdb-button-init data-mdb-ripple-init
                    class="btn btn-primary btn-block w-100 mb-4">Sign in
            </button>

            <!-- Register buttons -->
            <div class="text-center">
                <p>Not a member? <NavLink href="register">Register</NavLink></p>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    public UserDto? User { get; set; } = new UserDto();

    public async Task OnSubmit()
    {
        if (await UserManager.SignIn(User))
        {
            Navigation.NavigateTo("/", true);
        }
    }
}